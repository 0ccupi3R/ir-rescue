# ir-rescue-win configuration file
# accepted values: 'true' or 'false' (exclusive)

# general
	# remove all ir-rescue folders and files upon completion
killself=false
	# use secure delete in preference to Windows delete commands
	# Sysinternals "sdelete[64].exe"
sdelete=false
	# compress all data collected into a *.7z archive
	# 7-Zip "7za.exe"
zip=true
	# set a password for the resulting *.7z archive
	# leave empty to turn off encryption
zpassword=infected
	# take screenshots of all monitors at the start, before cleanup and at the end
	# NirSoft "nircmdc[64].exe"
screenshot=true
	# randomize ASCII art selection to be printed upon completion
	# ".\tools-win\ascii\*.txt"
	# default: ".\tools-win\ascii\cyb.txt"
ascii=true

# modules
	# collect memory data
memory=false
	# collect registry data
registry=false
	# collect Windows event logs
events=false
	# collect system data
system=false
	# collect network data
network=false
	# collect filesystem data
filesystem=false
	# collect malware data
malware=true
	# collect user activity data
activity=false
	# collect web data
web=false

	# make hard links to VSS copies and retrieve historical data
	# collect or parse files from all available VSS copies that apply
	# "vssadmin.exe"
vss=true


# memory
memory-all=true
memory-vss=true
	# dump the RAM to raw format
	# Pmem "winpmem_1.6.2.exe"
memory-dump=true
	# collect RAM paged onto the disk; VSS applies
	# listed in "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management"
	# "RawCopy[64].exe"
memory-pagefile=true
	# collect RAM written to disk during hibernation; VSS applies
	# "%SystemDrive%\hiberfil.sys"
	# "RawCopy[64].exe"
memory-hiberfil=true
	# collect Windows crash dumps; VSS applies
	# listed in "HKLM\SYSTEM\CurrentControlSet\Control\CrashControl"
	# "xcopy.exe"
memory-minidump=true

# registry
registry-all=true
registry-vss=true
	# collect system registry hives; VSS applies
	# "%SystemRoot%\System32\config\(SAM|SECURITY|SOFTWARE|SYSTEM)"
	# "RawCopy[64].exe"
registry-system=false
	# collect user registry hives; VSS applies
	# listed in "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList"
	# "RawCopy[64].exe"
registry-user=true

# events
events-all=true
	# collect Windows event logs in *.evtx format
	# Sysinternals "psloglist.exe"
events-evtx=true
	# collect Windows event logs in text format
	# Sysinternals "psloglist.exe"
events-txt=true

# system
system-all=true
system-vss=true
	# collect system (software and hardware) information 
	# Sysinternals "Psinfo[64].exe"
system-info=true
	# collect Windows user account and login data
	# Sysinternals "psloggedon[64].exe", "logonsessions[64].exe"
system-account=true
	# collect ACL permissions
	# ".\tools-win\cfg\[non]recursive-acl.txt"
	$ Sysinternals "accesschk[64].exe"
system-acl=true

# network
network-all=true
	# Sysinternals "tcpvcon.exe", "psfile[64].exe"

# filesystem
filesystem-all=false
filesystem-vss=true
	# collect NTFS information
	# "fsutil.exe", "ntfsinfo[64].exe"
filesystem-ntfs=false
	# collect VSS information
	# "vssadmin.exe"
filesystem-vss-info=false
	# get full file and directory listing sorted by last modified time (M); VSS applies
	# "dir.exe"
filesystem-dir-full=false
	# get plain file and directory listing sorted alphabetically; VSS applies
	# "dir.exe /B"
filesystem-dir-plain=false
	# walk the MFT
	# TSK "fls.exe"
filesystem-fls=false
	# compute MD5 values with file size and GMT timestamps (metadata change, C) sorted alphabetically; VSS applies
	# ".\tools-win\cfg\[non]recursive-md5deep.txt"
	# "md5deep[64].exe"
filesystem-md5=false
	# list NTFS ADSs from all drives available
	# NirSoft "AlternateDataStream[64].exe"
filesystem-ads=false
	# collect the NTFS MFT file from all drives available
	# "%SystemDrive%\$MFT"
	# "RawCopy[64].exe"
filesystem-mft=true
	# collect the NTFS log file from all drives available
	# records changes to the metadata; rotated every 24-36 hours
	# "%SystemDrive%\$LogFile"
	# "RawCopy[64].exe"
filesystem-log=true
	# collect the NTFS USN journal file from all drives available
	# tracks file operations; "$UsnJrnl:$J" ADS goes back a week or two
	# "%SystemDrive%\$UsnJrnl"
	# "ExtractUsnJrnl[64].exe"
filesystem-usnjrnl=true

# malware
malware-all=false
malware-vss=false
	# collect and parse prefetch files; VSS applies
	# "%SystemRoot%\Prefetch\*.pf"
	# NirSoft "WinPrefetchView[64].exe"; "xcopy.exe"
malware-prefetch=true
	# list running processes in plain and tree forms and with loaded DLLs
	# Sysinternals "pslist[64].exe", "handle[64].exe"; "tasklist.exe"
malware-processes=false
	# list loaded drivers in CSV and text formats
	# NirSoft "DriverView[64].exe"; "driverquery.exe"
malware-drivers=false
	# list loaded, unsigned DLLs and known DLLs
	# known DLLs listed in "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs"
	# Sysinternals "Listdlls[64].exe"; "reg.exe"
malware-dlls=false
	# list services
	# listed in "HKLM\SYSTEM\CurrentControlSet\Services\"
	# Sysinternals "PsService[64].exe"; "tasklist.exe", "sc.exe", "reg.exe"
malware-services=false
	# list scheduled tasks and collect tasks files; VSS applies
	# "%SystemRoot%\Tasks", "%SystemRoot%\(System32|SysWOW64)\Tasks"
	# "schtasks.exe", "xcopy.exe"
malware-tasks=false
	# list autorun entries in CSV and "autoruns" formats
	# Sysinternals "autoruns.exe", "autorunsc.exe"
malware-autoruns=false
	# list Microsoft Office Add-ins
	# NirSoft OfficeIns[64].exe
malware-office=false
	# get file and directory listing of hidden files and folders; VSS applies
	# ".\tools-win\cfg\[non]recursive.txt"
	# "dir.exe", "attrib.exe"
malware-hidden=false
	# collect user startup items; VSS applies
	# "%SystemDrive%\Users\<user>\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup"
	# "xcopy.exe"
malware-startup=false
	# collect program execution cache files; VSS applies
	# "%SystemRoot%\AppCompat\Programs\(RecentFileCache.bcf|Amcache.hve)"
	# "RawCopy[64].exe"; "xcopy.exe"
malware-cache=false

# activity
activity-all=true
activity-vss=true
	# list last activity items
	# NirSoft "LastActivityView.exe"
activity-mini-timeline=true
	# collect USB device history
	# NirSoft "USBDeview[64].exe"
activity-usb=true
	# parse automatic and custom destinations jump lists; VSS applies
	# "%SystemDrive%\Users\<user>\AppData\Roaming\Microsoft\Windows\Recent"
	# "JLECmd.exe"
activity-jump=true
	# parse Link (LNK) files; VSS applies
	# "%SystemDrive%\Users\<user>\AppData\Roaming\Microsoft\Windows\(Recent|Start Menu\Programs\Startup)"
	# "LECmd.exe"
activity-lnk=true
	# parse "$Recycle.Bin" "$I" files on all drives; Win7+; VSS applies
	# "rifiuti-vista[64].exe"
activity-bin=true

# web
web-all=true
	# collect Internet browsing history
	# NirSoft "BrowsingHistoryView[64].exe"
web-history=true
	# collect the Google Chrome cache
	# NirSoft "ChromeCacheView.exe"
web-chrome=true
	# collect the Internet Explorer cache
	# NirSoft "IECacheView.exe"
web-ie=true
	# collect the Mozilla Firefox cache
	# NirSoft "MozillaCacheView.exe"
web-mozilla=true


# advanced
	# check digital signatures and certificates of PEs
	# ".\tools-win\cfg\[non]recursive.txt"
	# Sysinternals "sigcheck[64].exe"
sigcheck=false
	# compute density (entropy) values
	# spot packed or encrypted binaries or payloads, or even compressed files
	# ".\tools-win\cfg\[non]recursive.txt"
	# "densityscout[64].exe"
density=false
	# extract icons from PEs
	# spot binaries compiled with default icons from unusual languages like Python
	# ".\tools-win\cfg\[non]recursive.txt"
	# NirSoft "iconsext.exe"
iconsext=false
	# run YARA scans
	# ".\tools-win\yara\rules\*.yar", ".\tools-win\cfg\[non]recursive.txt"
	# "yara(32|64).exe"
yara=false
